:

# $Id: rcjenkins2 1.4 2016/02/01 17:00:10 johayek Exp $
# $Source: /var/services/homes/johayek/git-servers/github.com/JochenHayek/misc/shell/RCS/rcjenkins2 $

# -> https://wiki.jenkins-ci.org/display/JENKINS/Starting+and+Accessing+Jenkins

################################################################################

short_base=jenkins

################################################################################

https_port=8099

# access your Jenkins server like this:
#
#   https://HOST:${https_port}/jenkins
#
# the "/jenkins" part is called prefix,
# and during the navigation through the Jenkins server,
# at pieces get appended to this prefix.
#
# Q: why do we suggest using a prefix?
# A: you can have various web servers running on your machine,
#    and just from the prefix "everybody" can see, it's about Jenkins.

################################################################################

# we store all the jenkins WARS we use(d) in this directory,
# so in case of trouble we can always fall back to an older version:

appl_version=1-646
appl_wars=$HOME/JENKINS_WARS

# of course after a while old versions can get purged.

################################################################################

# Q: where will live our PID file and our logfile?
# A: $HOME/var/run/ resp. $HOME/var/log/

pidfile=$HOME/var/run/${short_base}-${https_port}.pid
logfile=$HOME/var/log/${short_base}.$( date '+%Y%m%d%H%M%S' ).log

################################################################################

# the Jenkins web server is based on the "Winstone servlet container",
# and this document describes the "Winstone Command Line Parameter Reference":
#
#   http://winstone.sourceforge.net/#commandLine
#
# one of the useful command line options provided by Winstone:
#
#   --logfile=...
#
# through --logfile=... (see below!)
# we have a reasonable way of having the log output at a serious place.
#
# the way we construct the PID file
# we can tell the name of the logfile at any time through ".../rcjenkins status".

################################################################################

case "$1" in
  start | start_with_pidfile)
    echo "Starting ${short_base} ..."

    ################################################################################

    # we needed a while, until we found "our proper way",
    # each time a new JENKINS_HOME:

    export JENKINS_HOME=$HOME/JENKINS_HOME_000
    export JENKINS_HOME=$HOME/JENKINS_HOME_001
    export JENKINS_HOME=$HOME/JENKINS_HOME_002
    export JENKINS_HOME=$HOME/JENKINS_HOME_003
    export JENKINS_HOME=$HOME/JENKINS_HOME_004
    export JENKINS_HOME=$HOME/JENKINS_HOME_005

    mkdir --verbose --parents "$JENKINS_HOME"

    ################################################################################

    # used by plugin "ThinBackup":

    export JENKINS_BACKUPS=$HOME/JENKINS_BACKUPS

    ################################################################################

    nohup java -jar ${appl_wars}/${short_base}-${appl_version}.war \
      --httpsPort=${https_port} --httpPort=-1 \
      --prefix=/${short_base} \
      --logfile=${logfile} \
      &
    echo $!           >  ${pidfile}
    echo "${logfile}" >> ${pidfile}
    echo "Started ${short_base} on https port ${https_port}, PID: $!, logfile: ${logfile}"
    ;;

  stop | stop_with_pidfile)
    pid=$( head -1 "${pidfile}" )

    if test -e "${pidfile}" && test -d /proc/${pid}
    then
      echo -n "Shutting down ${short_base} "
      kill ${pid}
      if test -d /proc/${pidfile}
      then :
	echo "(unsuccessfully)"
      else :
	rm --verbose "${pidfile}"
      fi
    ##rc_status -v # supposedly this should run right after the "kill" command
    else
     echo "Not running"
    fi
    ;;

  reload|restart)
    $0 stop
    sleep 1
    $0 start
    ;;

  status | status_with_pidfile)
    echo -n "Checking for ${short_base} "
    if test -e "${pidfile}"
    then
      pid=$( head -1 "${pidfile}" )
      logfile=$( tail -1 "${pidfile}" )
      if test -d /proc/${pid}
      then :
        echo " seems running, PID: ${pid}, logfile: ${logfile}"
      else :
        echo " not running"
      fi
    else
      echo " not running"
    fi
  ;;

  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac
